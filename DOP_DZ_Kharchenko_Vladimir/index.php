<?php
//Напишите программу, которая проверяет правильность ввода пароля от пользователя.
// Важно, чтобы пароль соотв. сл. требованиям: длина пароля от 6 символов; пароль должен состоять только из лат. символов;
// содержать минимум 1 число, 1 большой символ и любой знак из списка: _*&-#$.

function checkPassword($email) {
if (preg_match("/^(?=.*[A-Z])(?=.*[0-9])(?=.*[\_\*\&\-\#\$]).{6,}/", $email)) {
return true;
} else return false;
}

echo var_dump(checkPassword("Test_1"));
echo "<hr>";
//Найти число с максимальной суммой цифр среди чисел: 56,987,103,9011,45.

function maxSum($num) {
$arr = explode(",", $num);
$max = $arr[0];
$sum = 0;


for ($i = 0; $i < count($arr); $i++) {
$sumNum = 0;
for ($j = 0; $j < strlen($arr[$i]); $j++) {
$sumNum += $arr[$i][$j];
}
if ($sum < $sumNum) {
$sum = $sumNum;
$max = $arr[$i];
}
}

return $max;
}

echo maxSum("56,987,103,9011,45");
echo "<hr>";
//
//Посчитайте и выведете кол-во встречающихся чисел в строке “В 2018 году появился проект,
// объединяющий возможности Windows Forms (.NET Framework) и PHP 7. Его разработка медленными темпами ведётся и сейчас.
// На текущий момент в движке доступны практически все функции для ООП. Среда находится на стадии приватной разработки.
// К исполняемому файлу по умолчанию прилагается php7ts.dll.”

function countNum($str) {
preg_match_all("/[0-9]/", $str, $arr);
return count($arr[0]);
}

echo countNum("В 2018 году появился проект, объединяющий возможности Windows Forms (.NET Framework) и PHP 7. Его разработка медленными темпами ведётся и сейчас.
На текущий момент в движке доступны практически все функции для ООП. Среда находится на стадии приватной разработки.
К исполняемому файлу по умолчанию прилагается php7ts.dll.");
echo "<hr>";

//Есть 2 массива: arr1 = [1,2,3,4,5,6,7,8] и arr2 = [5, 3, 6, 9, 11].
//Напишите функцию, которая принимает 2 массива и возвращает массив элементов, которые есть в обоих массивах.
//

echo var_dump(array_intersect([1,2,3,4,5,6,7,8], [5, 3, 6, 9, 11]));

//
//Есть два массива с числовыми значениями одинаковой длины.
// Создайте третий массив с суммами элементов данных массивов. Например:  [12,4,0] + [8,7,6] = [20, 11, 6].

function sumElArr($arr1, $arr2) {
$arr3 = [];
for ($i = 0; $i < count($arr1); $i++) {
array_push($arr3, ($arr1[$i] + $arr2[$i]));

}
return $arr3;
}

sumElArr([12,4,0], [8,7,6]);

//
//Поменяйте местами максимальный и минимальных элементы в массиве.
//

function reverseMaxMin($arr) {
$min = min($arr);
$max = max($arr);
$keyMin = array_search(min($arr), $arr);
$keyMax = array_search(max($arr), $arr);

$arr[$keyMax] = $min;
$arr[$keyMin] = $max;

return $arr;
}


echo var_dump(reverseMaxMin([5,4,3,2,6,1]));
//
//Напишите функцию alpha_bet_order(str), которая возвращает переданную строку с буквами в алфавитном порядке.
// Пример строки: 'alphabetical'. Ожидаемый результат: 'aaabcehillpt'. Предположим, что символы пунктуации и цифры не включены в переданную строку.

function alpha_bet_order($str) {
$arr = str_split($str);
sort($arr, SORT_STRING);
return implode($arr);
}

echo var_dump(alpha_bet_order('alphabetical'));


//Напишите функцию find_longest_word(str), которая принимает строку в качестве параметра и находит самое длинное слово в строке.

function find_longest_word($str) {
$arr = explode(' ', $str);
$maxLen = strlen($arr[0]);

foreach ($arr as $value) {
if (strlen($value) > $maxLen) {
$maxLen = strlen($value);
$max = $value;
}
}
return $max;

}

var_dump(find_longest_word("которая принимает строкуdfdfdfdfd в качестве параметра и находит самое длинное слово в строке"));


//Нужно написать функцию, которая проверяет, являются ли две строки анаграммами, причем регистр букв не имеет значения.
// Учитываются лишь символы; пробелы или знаки препинания в расчет не берутся.
//
//
//Напишите функцию create_password по созданию паролей длиной от минимум 8 символов, либо до кол-ва введеного через параметр.
// Обязательные требования к паролю: латинские символы и целые числа; специальные симоволы: _-,.&*^$#@+=!;
// минимум один большой симовол, одна цифра, один спец. символ.
//
function create_password($minLenght = 8) {
$chars = str_shuffle('_-,.&*^$#@+=!');
$number = str_shuffle('1234567890');
$strUp = str_shuffle('ABCDEFGHIJKLMNOPQRSTUVWXYZ');
$strDo = str_shuffle('abcdefghijklnopqrstuvwxyz');
$password = '';

for ($i = 0; $i < $minLenght; $i++) {
$password .= $chars[rand(0, (strlen($chars)-1))] . $number[rand(0, (strlen($number)-1))] . $strUp[rand(0, (strlen($strUp) - 1))] . $strDo[rand(0, (strlen($strDo) - 1))];

}

return str_shuffle(substr($password,0,  $minLenght));
}

echo var_dump(create_password(9));
//
//Создайте функцию "Калькулятор", calc(expression), которая должны уметь вычислять операции: сложение, вычитание, умножение, разность;
// между положительными целочисленными значениями. Математическое выражение должно передаваться через параметр expression в виде строки, например: "45+8", "4-23".
// Если параметр не передается, то нужно запросить выражение через input. Результат вычисления выведите через alert.
// Используйте регулярные выражения для "парсинг" (обработки) параметра).
//
//
//Напиши функцию, которая будет проверять любой объем текста на вхождение плохих (запрещенных) слов, и возвращать новый, прошедший цензуру, текст.
// Запрещенные слова нужно заменить на символы "#" в зависимости от длины слова. В функцию нужно передавать два параметра: текст, массив запрещенных слов.
$arr = ['cука',
'чмо',
'уёбок',
];
function filter($str, $arr) {
    $newStr = str_replace($arr, "*", $str);
    return $newStr;
}

echo var_dump(filter("как дела уёбок?", $arr));