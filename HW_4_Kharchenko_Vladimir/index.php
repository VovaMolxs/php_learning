<?php
//1. Дана строка 'london is the capital of great britain'. Сделайте из нее
//строку 'London Is The Capital Of Great Britain'.

$str = 'london is the capital of great britain';
$str = mb_convert_case($str, MB_CASE_TITLE, "UTF-8");
echo $str;

//2. Дана строка 'html <b>css</b> php'. Удалите теги из этой строки. С
//помощью функции explode запишите каждое слово этой строки в отдельный
//элемент массива.
$str2 = 'html <b>css</b> php';
echo strip_tags($str2);

//3. Дана строка. Перемешайте символы этой строки в случайном порядке.
echo "<hr>";
echo str_shuffle($str);

//4. Найдите количество дней в текущем месяце. Скрипт должен работать
//независимо от месяца, в котором он запущен.
echo "<hr>";
echo date ('t');
//5. Выведите текущую дату-время в форматах
//'2025-12-31', '31.12.2025', '31.12.13', '12:59:59', timestamp.
echo "<hr>";
echo date('Y-m-d');
echo "<hr>";
echo date('d.m.Y');
echo "<hr>";
echo date('d.m.y');
echo "<hr>";
echo date('h:i:s');
echo "<hr>";
echo time();
echo "<hr>";
//6. В переменной $date лежит дата в формате '2025-12-31'. Прибавьте к этой
//дате 2 дня, 1 месяц и 3 дня, 1 год. Отнимите от этой даты 3 дня.

echo date('Y-m-d');
echo "<hr>";
echo date("Y-m-d", time()+(2*24*60*60));
echo "<hr>";
echo date("Y-m-d", time()+(31*24*60*60 + 3*24*60*60));
echo "<hr>";
echo date("Y-m-d", time()+(365*24*60*60));
echo "<hr>";

//7. Дана строка с буквами и цифрами, например, '1a2b3c4b5d6e7f8g9h0'.
//Удалите из нее все цифры. То есть в нашем случае должна получится строка
//'abcbdefgh'.

$str = '1a2b3c4b5d6e7f8g9h0';
$pattern = '/[0-9]/';
$replace = '';
$str = preg_replace($pattern, $replace, $str);
echo $str;

//8. Даны числа 4, -2, 5, 19, -130, 0, 10. Найдите минимальное и максимальное
//число.
echo "<hr>";
$array = [4, -2, 5, 19, -130, 0, 10];
echo max($array);
echo "<hr>";
echo min($array);
//9. Выведите на экран случайное число от 1 до 100.
echo "<hr>";
echo rand(1, 100);
echo "<hr>";
//10. Создайте ассоциативный массив дней недели. Ключами в нем должны
//служить номера дней от начала недели (понедельник - должен иметь ключ 1,
//вторник - 2 и т.д.). Выведите на экран текущий день недели.

$dayWeek = [
    1 => "Понедельник",
    2 => "Вторник",
    3 => "Среда",
    4 => "Четверг",
    5 => "Пятница",
    6 => "Суббота",
    7 => "Воскресеньк",
];

foreach ($dayWeek as $key => $value) {
    if (date('N') == $key) {
        echo $value;
    }
}
echo "<hr>";


//11. Дан двухмерный массив с числами, например [[1, 2, 3], [4, 5], [6]].
//Найдите сумму элементов этого массива. Массив, конечно же, может быть
//произвольным.

$arr = [[1, 2, 3], [4, [1, 2]], [6]];
$sum = 0;
function arr_list($array, &$sum) {
    foreach ($array as $value) {
        if (is_array($value)) {
            arr_list($value, $sum);
        } else {
            $sum += $value;
        }
    }
    return $sum;

}
echo arr_list($arr, $sum);

//12. Есть массив $array = array(1,1,1,2,2,2,2,3), необходимо вывести 1,2,3, то
//есть вывести без дублей при помощи лишь одного цикла и без использования
//функций PHP.

$array = array(1,1,1,2,2,2,2,3);
foreach ($array as $value) {

}
//. Используя ассоциативный массив, добавить на страницу навигационное
//меню вида:
//<ul>
//<li><a href="index.php">Home</a></li>
//<li><a href="about.php">About</a></li>
//<li><a href="services.php">Services</a></li>
//<li><a href="catalog.php">Catalog</a></li>
//<li><a href="contacts.php">Contacts</a></li>
//</ul>
//Заполните массив соблюдая сл. условия: название индексов являются именем
//файла (без расширения), на который ссылается меню; значения массива явл.
//названиями пунктов меню.

$arr = [
  'index' => 'Home',
  'about' => 'About',
  'services' => 'Services',
  'catalog' => 'Catalog',
  'contacts' => 'Contacts',
];

echo "<ul>";
foreach ($arr as $key => $value) {
    echo "<li><a href=\"${key}\">${value}</a></li>";
}
echo "</ul>";

//14. Вывести на черном фоне n красных квадратов случайного размера в
//случайной позиции в браузере.
function sqw($n) {
    for ($i = 0; $i < $n; $i++) {
        $wh = rand(2, 100);
        echo  "
      <div style=\"
      position: absolute;
      top:" . rand(1, 100) . "vh;" . "
      left:" . rand(1, 100) . "vw;" . "
      background-color: red;
      border: 1px solid;
      height:" . $wh . 'px;' . "
      width:" . $wh . 'px;' . "\">
      </div>";
    }
}

sqw(10);
echo "<hr>";

//15. Дана строка с любыми символами. Для примера пусть будет '1234567890'.
//Нужно разбить эту строку в массив таким образом: array('1', '23', '456', '7890')
//и так далее пока символы в строке не закончатся.

$str = '1234567890';
$arr = [];
function rezka($str, &$arr) {
    $count = 1;
    $j = 0;
    for ($i = 0; $i < strlen($str); $i++) {
        array_push($arr, substr($str, $i, $count ));
        $str = substr($str, $i, strlen($str));
        $count++;
    }
    return $arr;
}

echo var_dump(rezka($str, $arr));

//16. Найдите сумму элементов массива между двумя нулями (первым и
//последним нулями в массиве). Если двух нулей нет в массиве, то выведите
//ноль. В массиве может быть более 2х нулей. Пример массива:
//[48,9,0,4,21,2,1,0,8,84,76,8,4,13,2] или [1,8,0,13,76,8,7,0,22,0,2,3,2]

function sumNull($arr) {
    if ($pos_1 = array_search('0', $arr)) {
       $arr = array_reverse(array_slice($arr, ($pos_1 + 1)));
        if ($pos_2 = array_search('0', $arr)) {
            $arr = array_slice($arr, $pos_2, count($arr));
            echo array_sum($arr);
        } else {
            return 0;
        }
    } else {
        return 0;
    }
}

//sumNull([48,9,0,4,21,2,1,0,8,84,76,8,4,13,2]);
sumNull([1,8,0,13,76,8,7,0,22,0,2,3,2]);

//17. Сделайте функцию, которая будет генерировать случайный цвет в hex
//(dechex) формате (типа #ffffff).
//18. Дана строка '332 441 550'. Найдите все места, где есть два одинаковых
//идущих подряд цифры и замените их на '!'.
//19. Напишите ф-цию строгой проверки ввода номер телефона в
//международном формате (<код страны> <код города или сети> <номер
//телефона>) и упрощенной проверки ввода простого номера с кодом и без
//него. Функция должна возвращать true или false.
//20. Напишите ф-цию, которая должна проверить правильность ввода адреса
//эл. почты. Почта верна при условии:
//a. весь адрес не должен содержать русские буквы и спецсимволы, кроме
//одной «собачки», знака подчеркивания, дефиса и точки, причем они не могут
//быть первыми и последними в адресе, и идти подряд, например: «..», «@.»,
//«.@» или «@@», «_@», «@-», «--» и т.п.
//b. имя эл. почты (до знака @) должно быть длиной более 2 символов, причем
//имя может содержать только буквы, цифры, но не быть первыми и
//единственными в имени, и точку;
//c. после последней точки и после @, домен верхнего уровня (ru, by, com и
//т.п.) не может быть длиной менее 2 и более 11 символов




?>


